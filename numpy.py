# -*- coding: utf-8 -*-
"""numpy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YwJFgU4sKkfKOCBL9mxDpDyaQ9z8cIJv
"""

import numpy as np

"""basics"""

np1 = np.array([0,1,2,3,4,5])
print(np1)

print(np1.shape)

np2 = np.arange(10)
print(np2)

np3 = np.arange(1,10,2)
print(np3)

np4 = np.zeros(10)
print(np4)

np5 = np.zeros((2,10))
print(np5)

np6 = np.full((10),6)
print(np6)

np7 = np.full((2,10),6)
print(np7)

my_list = [2,5,7,9,0]
np8 = np.array(my_list)
print(np8)

ele = np8[0]
print(ele)

"""Slicing"""

npp = np.array([1,2,3,4,5,6,7,8,9])

print(npp[1:3])

print(npp[2:])

print(npp[:])

print(npp[-3:-1])

print(npp[1:5:2])

print(npp[::2])

npp2 = np.array([[1,2,3,4,5],[6,7,8,9,10]])

print(npp2[1,2])

print(npp2[0:1,1:3])

print(npp2[0:2,1:3])

"""Numpy Universal Function"""

npp3 = np.array([1,2,3,4,5])

print(np.sum(npp3))

print(np.sqrt(npp3))

print(np.absolute(npp3))

print(np.exp(npp3))

print(np.max(npp3))
print(np.min(npp3))

print(np.sign(npp3))

print(np.sin(npp3))

print(np.log(npp3))

"""Numpy array copy vs view"""

npp4 = np.array([1,2,3,4,5])

"""create copy"""

npp5 = npp4.copy()

"""create view"""

npp6 = npp4.view()

"""changing elements"""

npp4[0]=34

"""analysing the result"""

print(f'original array: {npp4}')
print(f'copy array: {npp5}')
print(f'view array: {npp6}')

"""shape and reshape numpy array"""

npp7 = np.array([1,2,3,4,5,6,7,8,9,10,11,12])
print(npp7)
print(npp7.shape)

npp8 = np.array([[1,2,3,4,5,6],[7,8,9,10,11,12]])
print(npp8)
print(npp8.shape)

"""reshape 1-d to 2-d"""

npp9 = npp7.reshape(3,4)
print(npp9)
print(npp9.shape)

"""reshape to 3 - d"""

npp10 = npp7.reshape(2,3,2)
print(npp10)
print(npp10.shape)

"""flatten to 1-d"""

npp11 = npp10.reshape(-1)
print(npp11)
print(npp11[-1])

"""Iterating through numpy arrays"""

npp12 = np.array([1,2,3,4,5,6,7,8,9,10,11,12])
npp13 = np.array([[1,2,3,4,5,6],[7,8,9,10,11,12]])
npp14 = npp12.reshape(2,3,2)

"""iterating through conventional method"""

for x in npp12:
  print(x)

for x in npp13:
  for y in x:
    print(y)

for x in npp14:
  for y in x:
    for z in y:
      print(z)

"""better way to do so use "np.nditer"
"""

for x in np.nditer(npp14):
  print(x)

"""Sorting numpy arrays"""

npp15 = np.array([6,7,4,9,0,2,1])
npp16 = np.sort(npp15)
print(npp15)
print(npp16)

npp17 = (["deep","manav","ashish"])
npp18 = np.sort(npp17)
print(npp17)
print(npp18)

"""Searching in numpy array"""

npp19 = np.array([1,2,3,4,5,3,7,8,9,10])
x = np.where(npp19 == 3)
print(npp19)
print(x[0])

y = np.where(npp19 % 2 == 0)
print(y[0])

"""Filtering in numpy array"""

npp20 = np.array([1,2,3,4,5,6,7,8,9,10,11,12])
x = [True,True,False,False,False,False,False,False,False,False,True,True]
print(npp20)
print(npp20[x])

filtered = []
for x in npp20:
  if x%2 == 0:
    filtered.append(True)
  else:
    filtered.append(False)

print(npp20[filtered])

filtered = npp20%2==1
print(npp20[filtered])